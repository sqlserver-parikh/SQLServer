CREATE OR ALTER PROCEDURE usp_KillSessions
    @SessionStatus NVARCHAR(50) = NULL,
    @LoginThresholdMinutes INT = 60,
    @LoginNames NVARCHAR(MAX) = NULL,         -- Comma-separated login names
    @TargetSpids NVARCHAR(MAX) = NULL,        -- Comma-separated SPIDs
    @TargetDatabases NVARCHAR(MAX) = NULL,    -- Comma-separated database names
    @HostNames NVARCHAR(MAX) = NULL,          -- Comma-separated host names
    @ProgramNames NVARCHAR(MAX) = NULL,        -- Comma-separated program names
    @PrintOnly BIT = 0
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @ThresholdTime DATETIME = DATEADD(MINUTE, -@LoginThresholdMinutes, GETDATE());
    DECLARE @spid INT, @sql NVARCHAR(MAX);

    -- Normalize inputs
    CREATE TABLE #LoginNames (LoginName NVARCHAR(256));
    IF ISNULL(@LoginNames, '') <> ''
        INSERT INTO #LoginNames SELECT TRIM(value) FROM STRING_SPLIT(@LoginNames, ',');

    CREATE TABLE #TargetSpids (SPID INT);
    IF ISNULL(@TargetSpids, '') <> ''
        INSERT INTO #TargetSpids SELECT TRY_CAST(TRIM(value) AS INT) FROM STRING_SPLIT(@TargetSpids, ',');

    CREATE TABLE #TargetDatabases (DbName NVARCHAR(256));
    IF ISNULL(@TargetDatabases, '') <> ''
        INSERT INTO #TargetDatabases SELECT TRIM(value) FROM STRING_SPLIT(@TargetDatabases, ',');

    CREATE TABLE #HostNames (HostName NVARCHAR(256));
    IF ISNULL(@HostNames, '') <> ''
        INSERT INTO #HostNames SELECT TRIM(value) FROM STRING_SPLIT(@HostNames, ',');

    CREATE TABLE #ProgramNames (ProgramName NVARCHAR(256));
    IF ISNULL(@ProgramNames, '') <> ''
        INSERT INTO #ProgramNames SELECT TRIM(value) FROM STRING_SPLIT(@ProgramNames, ',');

    -- Identify SPIDs to kill
    CREATE TABLE #SPIDsToKill (SPID INT);
    INSERT INTO #SPIDsToKill (SPID)
    SELECT spid
    FROM sys.sysprocesses p
    WHERE spid > 50
      AND login_time < @ThresholdTime
      AND (ISNULL(@SessionStatus, '') = '' OR p.status = @SessionStatus)
      AND (
            ISNULL(@LoginNames, '') = ''
            OR EXISTS (SELECT 1 FROM #LoginNames l WHERE RTRIM(p.loginame) = RTRIM(l.LoginName))
          )
      AND (
            ISNULL(@TargetSpids, '') = ''
            OR EXISTS (SELECT 1 FROM #TargetSpids s WHERE s.SPID = p.spid)
          )
      AND (
            ISNULL(@TargetDatabases, '') = ''
            OR EXISTS (SELECT 1 FROM #TargetDatabases d WHERE DB_NAME(p.dbid) = d.DbName)
          )
      AND (
            ISNULL(@HostNames, '') = ''
            OR EXISTS (SELECT 1 FROM #HostNames h WHERE RTRIM(p.hostname) = RTRIM(h.HostName))
          )
      AND (
            ISNULL(@ProgramNames, '') = ''
            OR EXISTS (SELECT 1 FROM #ProgramNames pr WHERE RTRIM(p.program_name) = RTRIM(pr.ProgramName))
          );

    -- Loop and kill matching SPIDs
    DECLARE KillCursor CURSOR LOCAL FAST_FORWARD FOR
    SELECT SPID FROM #SPIDsToKill;

    OPEN KillCursor;
    FETCH NEXT FROM KillCursor INTO @spid;

    WHILE @@FETCH_STATUS = 0
    BEGIN
        SET @sql = 'KILL ' + CAST(@spid AS NVARCHAR(10));
	IF @PrintOnly = 0
        EXEC sp_executesql @sql;
        PRINT @sql;
        FETCH NEXT FROM KillCursor INTO @spid;
    END

    CLOSE KillCursor;
    DEALLOCATE KillCursor;

    -- Cleanup
    DROP TABLE #SPIDsToKill;
    DROP TABLE #LoginNames;
    DROP TABLE #TargetSpids;
    DROP TABLE #TargetDatabases;
    DROP TABLE #HostNames;
    DROP TABLE #ProgramNames;
END;
